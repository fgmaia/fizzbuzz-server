// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	entities "fizzbuzz-server/internal/entities"

	mock "github.com/stretchr/testify/mock"
)

// StatsServiceIface is an autogenerated mock type for the StatsServiceIface type
type StatsServiceIface struct {
	mock.Mock
}

// ParseStatsKey provides a mock function with given fields: key
func (_m *StatsServiceIface) ParseStatsKey(key string) (entities.StatsKeys, error) {
	ret := _m.Called(key)

	if len(ret) == 0 {
		panic("no return value specified for ParseStatsKey")
	}

	var r0 entities.StatsKeys
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (entities.StatsKeys, error)); ok {
		return rf(key)
	}
	if rf, ok := ret.Get(0).(func(string) entities.StatsKeys); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(entities.StatsKeys)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewStatsServiceIface creates a new instance of StatsServiceIface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStatsServiceIface(t interface {
	mock.TestingT
	Cleanup(func())
}) *StatsServiceIface {
	mock := &StatsServiceIface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
