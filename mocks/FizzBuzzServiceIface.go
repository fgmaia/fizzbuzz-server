// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// FizzBuzzServiceIface is an autogenerated mock type for the FizzBuzzServiceIface type
type FizzBuzzServiceIface struct {
	mock.Mock
}

// GenerateFizzBuzz provides a mock function with given fields: int1, int2, limit, str1, str2
func (_m *FizzBuzzServiceIface) GenerateFizzBuzz(int1 int, int2 int, limit int, str1 string, str2 string) []string {
	ret := _m.Called(int1, int2, limit, str1, str2)

	if len(ret) == 0 {
		panic("no return value specified for GenerateFizzBuzz")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func(int, int, int, string, string) []string); ok {
		r0 = rf(int1, int2, limit, str1, str2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// NewFizzBuzzServiceIface creates a new instance of FizzBuzzServiceIface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFizzBuzzServiceIface(t interface {
	mock.TestingT
	Cleanup(func())
}) *FizzBuzzServiceIface {
	mock := &FizzBuzzServiceIface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
